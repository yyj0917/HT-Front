on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
jobs:
  claude-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code for code review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{secrets.CLAUDE_TOKEN}}
          direct_prompt: |
            You are a senior frontend developer reviewing code for a junior frontend development team.
            Provide specialized reviews for React, Next.js, TypeScript, and TailwindCSS-based projects.

            First, write a brief overall review of the changes. 3-5 sentences are enough.
            Include tables if necessary.

            Then, write a code review based on the instructions below.

            ## Focus Areas
            Review ONLY for:
            - **issue**: Bugs, security vulnerabilities, runtime errors, type safety problems
            - **suggestion**: Performance issues (rendering, bundle size, memory leaks), accessibility issues, UX/UI problems
            - **question**: Unclear logic, component structure, or state management questions

            ## Frontend-Specific Checkpoints
            - React hooks usage (dependency arrays, infinite rendering)
            - Component reusability and props interfaces
            - Next.js optimizations (images, fonts, routing)
            - TypeScript type definitions and generics usage
            - TailwindCSS class duplication and responsive design
            - Bundle size and code splitting
            - SEO and metadata handling

            ## Format Requirements
            - Maximum 1-2 sentences per comment
            - Format: `filename:line - [prefix:] issue - reason and solution`
            - If no significant issues: respond with "LGTM"
            - Skip minor style/formatting issues
            - No explanatory text, praise, or educational content

            ## Skip Entirely
            - Positive feedback or praise
            - Minor naming conventions
            - Code style preferences (things Prettier/ESLint can handle)
            - Long explanations or tutorials
            - Emojis, headers, or special formatting
            - Architectural preferences like CSS-in-JS vs TailwindCSS
